{"version":3,"sources":["components/LoginForm.jsx","components/MessageForm.jsx","components/MyMessage.jsx","components/TheirMessage.jsx","components/ChatFeed.jsx","App.js","index.js"],"names":["LoginForm","useState","username","setUsername","password","setPassword","error","setError","handleSubmit","e","a","preventDefault","authObject","axios","get","headers","localStorage","setItem","window","location","reload","className","onSubmit","type","value","onChange","target","placeholder","required","align","MessageForm","props","setValue","chatId","creds","event","text","trim","length","sendMessage","isTyping","htmlFor","PictureOutlined","multiple","id","style","display","files","SendOutlined","MyMessage","message","attachments","src","file","alt","float","marginRight","color","backgroundColor","TheirMessage","lastMessage","isFirstMessageByUser","sender","backgroundImage","avatar","marginLeft","ChatFeed","chats","activeChat","userName","messages","chat","renderReadReceipts","isMyMessage","people","map","person","index","last_read","title","keys","Object","key","lastMessageKey","width","renderMessages","height","App","getItem","projectID","userSecret","renderChatFeed","chatAppProps","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.99b23d6a.chunk.js","sourcesContent":["import { useState } from 'react';\nimport axios from 'axios';\n\nconst LoginForm = () => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        const authObject = { 'Project-ID': \"c8bf485d-7813-41f2-ade5-e741179e1875\", 'User-Name': username, 'User-Secret' : password };\n\n\n        try {\n            // username / password => chatengine -> give messages\n           await axios.get('https://api.chatengine.io/chats', { headers: authObject });\n\n            // works out -> logged in\n            localStorage.setItem('username', username);\n            localStorage.setItem('password', password);\n\n            window.location.reload();\n        }\n        catch (error) {\n            // error -> try with new username...\n            setError('Oops, incorrect Credentials.')\n        }\n    }\n\n    return (\n       <div className=\"wrapper\">\n           <div className=\"form\">\n               <h1 className=\"title\">\n                   codeApe Chat Application\n               </h1>\n               <form onSubmit={handleSubmit}>\n                    <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} className=\"input\" placeholder=\"Username\" required/>\n                    <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} className=\"input\" placeholder=\"Password\" required/>\n                    <div align=\"center\">\n                        <button type=\"submit\" className=\"button\">\n                            <span>Start Chatting</span>\n                        </button>\n                    </div>\n                    <h2 className=\"error\">{error}</h2>\n               </form>\n           </div>\n       </div>\n    )\n}\n\nexport default LoginForm","import React from 'react';\nimport { useState } from 'react';\nimport { sendMessage, isTyping } from 'react-chat-engine';\nimport { SendOutlined, PictureOutlined } from '@ant-design/icons';\n\nconst MessageForm = (props) => {\n    const [value, setValue] = useState('');\n    const { chatId, creds } = props;\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n\n        const text = value.trim();\n\n        if(text.length > 0) sendMessage(creds, chatId, { text });\n\n        setValue('');\n    }\n\n    const handleChange = (event) => {\n        setValue(event.target.value);\n\n        isTyping(props, chatId)\n    }\n\n    const handleUpload = (event) => {\n        sendMessage(creds, chatId, { files: event.target.files, text: '' })\n    }\n\n    return (\n        <form className=\"message-form\" onSubmit={handleSubmit}>\n            <input \n               className=\"message-input\"\n               placeholder=\"Send a message...\" \n               value={value}\n               onChange={handleChange}\n               onSubmit={handleSubmit}\n            />\n            <label htmlFor=\"upload-button\">\n                <span className=\"image-button\">\n                    <PictureOutlined className=\"picture-icon\"/>\n                </span>\n            </label>\n            <input \n                type=\"file\"\n                multiple={false}\n                id=\"upload-button\"\n                style={{ display: 'none' }}\n                onChange={handleUpload}\n            />\n            <button type=\"submit\" className=\"send-button\">\n                <SendOutlined className=\"send-icon\" />\n            </button>\n        </form>\n    )\n}\n\nexport default MessageForm;","import React from 'react';\n\nconst MyMessage = ({ message }) => {\n    if(message?.attachments?.length > 0) {\n        return (\n            <img \n                src={message.attachments[0].file}\n                alt = \"message-attachment\"\n                className = \"message-image\"\n                style={{ float: 'right' }}\n            />\n        )\n    }\n\n    return (\n        <div className=\"message\" style={{ float: 'right', marginRight: '18px', color: 'white', backgroundColor: '#3B2A50' }}>\n            {message.text}\n        </div>\n    )\n}\n\nexport default MyMessage;","import React from \"react\";\n\nconst TheirMessage = ({ lastMessage, message }) => {\n  const isFirstMessageByUser =\n    !lastMessage || lastMessage.sender.username !== message.sender.username;\n\n  return (\n    <div className=\"message-row\">\n      {isFirstMessageByUser && (\n        <div\n          className=\"message-avatar\"\n          style={{ backgroundImage: `url(${message?.sender?.avatar})` }}\n        />\n      )}\n\n      {message?.attachments?.length > 0 ? (\n        <img\n          src={message.attachments[0].file}\n          alt=\"message-attachment\"\n          className=\"message-image\"\n          style={{ marginLeft: isFirstMessageByUser ? '4px' : '48px' }}\n        />\n      ) : (\n        <div\n          className=\"message\"\n          style={{\n            float: \"left\",\n            backgroundColor: \"#CABCDC\",\n            marginLeft: isFirstMessageByUser ? '4px' : '48px'\n          }}\n        >\n          {message.text}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TheirMessage;\n","import React from \"react\";\nimport MessageForm from './MessageForm'\nimport MyMessage from './MyMessage'\nimport TheirMessage from './TheirMessage'\n\n\nconst ChatFeed = (props) => {\n\n    const { chats, activeChat, userName, messages } = props;\n\n    const chat = chats && chats[activeChat];\n\n    const renderReadReceipts = ( message, isMyMessage) => {\n        return chat.people.map((person, index) => person.last_read === message.id && (\n            <div \n                key={`read_${index}`}\n                className=\"read-receipt\"\n                style={{\n                    float: isMyMessage ? 'right' : 'left',\n                    backgroundImage: `url(${person?.person?.avatar})`\n                }}\n            />\n        ))\n    }\n\n    const renderMessages = () => {\n        const keys = Object.keys(messages);\n\n        return keys.map((key, index) => {\n            const message = messages[key];\n            const lastMessageKey = index === 0 ? null : keys[index - 1];\n            const isMyMessage = userName === message.sender.username;\n\n            return (\n                <div key={`msg_${index}`} style={{ width: '100%' }}>\n                    <div className=\"message-block\">\n                        {\n                            isMyMessage\n                            ? <MyMessage message={message} />\n                            : <TheirMessage message={message} lastMessage={messages[lastMessageKey]} />\n                        }\n                    </div>\n                    <div className=\"read-receipts\" style={{ marginRight: isMyMessage ? '18px' : '0px', marginLeft: isMyMessage ? '0px' : '68px'}}>\n                        {renderReadReceipts(message, isMyMessage)}\n                    </div>\n                </div>\n            )\n        })\n    }\n\n    if(!chat) return 'Loading...';\n\n  return (\n    <div className=\"chat-feed\">\n        <div className=\"chat-title-container\">\n            <div className=\"chat-title\">\n                {chat?.title}\n            </div>\n            <div className=\"chat-subtitle\">\n                {chat.people.map((person) => `${person.person.username}`)}\n            </div>\n        </div>\n        {renderMessages()}\n        <div style={{ height: '100px' }}/>\n        <div className=\"message-form-container\">\n            <MessageForm {...props} chatId={activeChat} />\n        </div>\n    </div>\n  );\n};\n\nexport default ChatFeed;\n","import { ChatEngine } from \"react-chat-engine\";\n\nimport LoginForm from \"./components/LoginForm\";\nimport ChatFeed from \"./components/ChatFeed\";\n\nimport \"./App.css\";\n\nconst App = () => {\n  if (!localStorage.getItem(\"username\")) return <LoginForm />;\n\n  return (\n    <ChatEngine\n      height=\"100vh\"\n      projectID=\"c8bf485d-7813-41f2-ade5-e741179e1875\"\n      userName={localStorage.getItem('username')}\n      userSecret={localStorage.getItem('password')}\n      renderChatFeed={(chatAppProps) => <ChatFeed {...chatAppProps} />}\n    />\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}